@model IEnumerable<tenorchem.Models.PurchaseRecord>

@{
    ViewData["Title"] = "Index";
}
<br>
<h2 class="text-center">Purchase Records</h2>
<br>
<table id="table" class="table" data-toggle="table" data-search="true" data-sort-name="Date" data-sort-order="desc" data-pagination="true" data-page-size="35">
    <div class="form-inline text-center">
        <label>Start Date</label>
        <input type="date" id="startDate">
        <label>End Date</label>
        <input type="date" id="endDate">
        <button id="searchButton" class="btn btn-default">Filter By Date Period</button>
        <button id="recoverButton" class="btn btn-default">Remove Filter</button>
        <button id="exportButton" class="btn btn-default">Export to Excel</button>
    </div>
    <thead>
        <tr>
                <th style data-field="Date" data-sortable="true">
                    PurchaseDate
                </th>
                <th style data-field="Product" data-sortable="true">
                    Product
                </th>
                <th style data-field="Supplier" data-sortable="true">
                    Supplier
                </th>
                <th style data-field="Price" data-sortable="true">
                    Unit Price
                </th>
                <th style data-field="Quantity" data-sortable="true">
                    Quantity
                </th>
                <th style data-field="TotalPrice" data-sortable="true">
                    Total Price
                </th>
                <th style data-field="Comment">
                    Entra Information
                </th>

            <th style data-field="Functions"></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PurchaseDate)
            </td>
            <td>
                @{
                    string s = item.Product.Name+ "(" + item.Product.Purity+ ")";
                }
                @s
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Supplier.SupplierName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PricePerTon)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>            
            <td>
                @Html.DisplayFor(modelItem => item.TotalPaidPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.comment)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.PurchaseRecordId">Edit</a> |
                <a asp-action="Delete" asp-route-id="@item.PurchaseRecordId">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<script>
    var $table = $('#table'), $searchButton = $('#searchButton'), 
        $revocerButton = $('#recoverButton'), $exportButton = $('#exportButton');
    
    $(function(){
        $searchButton.click(function(){
            $table.bootstrapTable('load',filterData());
        });
        $revocerButton.click(function(){
            $table.bootstrapTable('load',allData());
        });
        $exportButton.click(function(){
            $table.tableExport({type:'excel'});
        });

    });

    function filterData(){
        var begin = $('#startDate').val(), end = $('#endDate').val();
        var rows = [];
        @foreach (var item in Model){
            
            
            <text>
                var pDate = new Date(@item.PurchaseDate.ToString("yyyy,MM-1,dd"));
                var sDate = new Date(begin);
                sDate.setTime(sDate.getTime() + sDate.getTimezoneOffset()*60*1000);
                var eDate = new Date(end);
                eDate.setTime(eDate.getTime() + eDate.getTimezoneOffset()*60*1000);
            if(pDate >= sDate && pDate <= eDate)
            {
                var comment = new String("@item.comment");
                var s = new String("@item.Product.Name" + "(" + "@item.Product.Purity" + ")");
                var supplierName = new String("@item.Supplier.SupplierName");
                var recordId = new String("@item.PurchaseRecordId");

                var funcString =
                    '<a href="/PurchaseRecords/Edit/' + recordId + '">Edit</a> | ' +
                    '<a href="/PurchaseRecords/Delete/' + recordId + '">Delete</a>';

                rows.push({
                    Date: "@item.PurchaseDate.ToString("yyyy-MM-dd")",
                    Price: @item.PricePerTon,
                    Quantity: @item.Quantity,
                    TotalPrice: @item.TotalPaidPrice,
                    Comment: comment,
                    Product: s,
                    Supplier: supplierName,
                    Functions: funcString
                });
            }
            </text>
        }
        return rows;
    }

    function allData(){
        var rows = [];
        @foreach (var item in Model){
            <text>
                var comment = new String("@item.comment");
                var s = new String("@item.Product.Name" + "(" + "@item.Product.Purity" + ")");
                var supplierName = new String("@item.Supplier.SupplierName");
                var recordId = new String("@item.PurchaseRecordId");

                var funcString =
                    '<a href="/PurchaseRecords/Edit/' + recordId + '">Edit</a> | ' +
                    '<a href="/PurchaseRecords/Delete/' + recordId + '">Delete</a>';

                rows.push({
                    Date: "@item.PurchaseDate.ToString("yyyy-MM-dd")",
                    Price: @item.PricePerTon,
                    Quantity: @item.Quantity,
                    TotalPrice: @item.TotalPaidPrice,
                    Comment: comment,
                    Product: s,
                    Supplier: supplierName,
                    Functions: funcString
                });
            </text>
        }
        return rows;
    }    
</script>
